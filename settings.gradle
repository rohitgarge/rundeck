import javax.inject.Inject

/*
 * Copyright 2016 SimplifyOps, Inc. (http://simplifyops.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 plugins {
    id "com.gradle.enterprise" version "3.7.1"
}

include	'rundeck-storage',
    'rundeck-storage:rundeck-storage-api',
    'rundeck-storage:rundeck-storage-data',
    'rundeck-storage:rundeck-storage-conf',
    'rundeck-storage:rundeck-storage-filesys',
    'rundeck-authz',
    'rundeck-authz:rundeck-authz-api',
    'rundeck-authz:rundeck-authz-core',
    'rundeck-authz:rundeck-authz-yaml',
    'rundeck-app-util',
    'core',
    'plugins:localexec-plugin',
    'plugins:script-plugin',
    'plugins:script-node-step-plugin',
    'plugins:stub-plugin',
    'plugins:copyfile-plugin',
    'plugins:job-state-plugin',
    'plugins:source-refresh-plugin',
    'plugins:flow-control-plugin',
    'plugins:jasypt-encryption-plugin',
    'plugins:object-store-plugin',
    'plugins:azure-object-store-plugin',
    'plugins:orchestrator-plugin',
    'plugins:git-plugin',
    'plugins:audit-logging-plugin',
    'plugins:upvar-plugin',
    'rundeckapp',
    'grails-metricsweb',
    'rundeckapp:grails-spa',
    'rundeckapp:grails-spa:packages:ui-trellis',
    'grails-persistlocale',
    'grails-securityheaders',
    'grails-repository',
    'grails-webhooks',
    'grails-execution-mode-timer',
    'grails-rundeck-data-shared',
    'docker',
    'functional-test',
    'grails-job-kill-handler',
    'plugins:jsch-plugin'

def projectFeatureEnabled = { String feature, Boolean defaultVal ->
    try {
        settings[feature].toBoolean()
    } catch (Exception ex) {
        defaultVal == null ? false : defaultVal
    }
}

def enableIncremental = projectFeatureEnabled('rundeck.proj.incremental.enabled', false)
if (enableIncremental) {
    enableFeaturePreview('GROOVY_COMPILATION_AVOIDANCE')
}

//
//@CacheableRule
//abstract class ExcludeCoords implements ComponentMetadataRule {
//    final String coords
//
//    @Inject ExcludeCoords(String coords) {
//        this.coords = coords
//    }
//
//    void execute(ComponentMetadataContext context) {
//        context.details.allVariants {
//            withDependencies {
//                removeAll { "${it.group}:${it.module.name}".toString() == coords }
//            }
//        }
//    }
//}
//
//dependencyResolutionManagement {
//    components {
//        withModule("org.grails:grails-plugin-url-mappings", ExcludeCoords) {
//            //exclude unnecessary dependency, see https://github.com/grails/grails-core/pull/12390
//            it.params("junit:junit")
//        }
//        withModule("org.grails:grails-plugin-i18n", ExcludeCoords) {
//            //exclude unnecessary dependency, see https://github.com/grails/grails-core/pull/12390
//            it.params("org.codehaus.groovy:groovy-ant")
//        }
//        withModule("org.grails.plugins:database-migration", ExcludeCoords) {
//            //exclude unnecessary dependency, specifically the database-migration->grails-shell->junit
//            it.params("org.grails:grails-shell")
//        }
//    }
//}